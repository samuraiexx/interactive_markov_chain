{"version":3,"sources":["components/nodeEditor/index.js","components/markov-chain/index.js","components/hooks/index.js","components/home/index.js","components/about/index.js","components/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","input","NodeEditor","classes","React","useState","value","setValue","className","Typography","id","gutterBottom","Grid","container","spacing","alignItems","item","VolumeUp","xs","Slider","onChange","event","newValue","aria-labelledby","Input","margin","target","Number","onBlur","inputProps","step","min","max","type","MarkovChain","props","nodes","selectedNode","tryUpdateNodeProbabilities","nodeEditorProps","node","probabilities","open","setOpen","toggleDrawer","Fragment","data","links","source","strokeWidth","config","nodeHighlightBehavior","directed","highlightDegree","d3","linkLength","color","size","highlightStrokeColor","labelPosition","fontSize","highlightFontSize","fontColor","link","highlightColor","onClickNode","nodeId","console","log","onRightClickNode","onClickLink","onRightClickLink","onMouseOverNode","onMouseOutNode","onMouseOverLink","onMouseOutLink","onNodePositionChange","x","y","ButtonGroup","aria-label","Button","onClick","Drawer","anchor","onClose","Node","label","this","isSelected","transitionProbabilities","createData","name","calories","fat","carbs","protein","rows","table","minWidth","Home","markovChainState","setNodes","currentNode","setCurrentNode","setSelectedNode","addNode","length","removeNode","slice","newProbabilities","force","newNodes","sum","reduce","accumulator","currentValue","map","probability","newNode","useMarkovChain","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","key","scope","About","darkTheme","createMuiTheme","palette","App","ThemeProvider","theme","CssBaseline","Link","RouterLink","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.84e0dfa4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Slider,\r\n  Input,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { VolumeUp } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n  },\r\n  input: {\r\n    width: 42,\r\n  },\r\n});\r\n\r\nfunction NodeEditor() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(30);\r\n\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 100) {\r\n      setValue(100);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography id=\"input-slider\" gutterBottom>\r\n        Volume\r\n      </Typography>\r\n      <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item>\r\n          <VolumeUp />\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 10,\r\n              min: 0,\r\n              max: 100,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NodeEditor;","import React, { useState } from 'react';\r\nimport {\r\n  Drawer,\r\n  Button,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\"\r\nimport { Graph } from \"react-d3-graph\";\r\n\r\nimport NodeEditor from '../nodeEditor';\r\n\r\nfunction MarkovChain(props) {\r\n  const {\r\n    nodes,\r\n    selectedNode,\r\n    tryUpdateNodeProbabilities,\r\n    /*\r\n      currentNode,\r\n      setCurrentNode,\r\n      setSelectedNode,\r\n      addNode,\r\n      removeNode,\r\n    */\r\n  } = props;\r\n\r\n  const nodeEditorProps = {\r\n    node: nodes[selectedNode],\r\n    tryUpdateNodeProbabilities: probabilities => tryUpdateNodeProbabilities(selectedNode, probabilities)\r\n  }\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const toggleDrawer = () => setOpen(!open);\r\n\r\n\r\n  // graph payload (with minimalist structure)\r\n  // https://danielcaldas.github.io/react-d3-graph/docs/\r\n  const data = {\r\n    nodes: [{ id: 0 }, { id: 1 }, { id: 2 }],\r\n    links: [\r\n      { source: 0, target: 1, strokeWidth: 5 },\r\n      { source: 1, target: 0 },\r\n      { source: 0, target: 2 },\r\n    ],\r\n  };\r\n\r\n  // the graph configuration, you only need to pass down properties\r\n  // that you want to override, otherwise default ones will be used\r\n  const myConfig = {\r\n    nodeHighlightBehavior: true,\r\n    directed: true,\r\n    highlightDegree: 0,\r\n    d3: {\r\n      linkLength: 200,\r\n    },\r\n    node: {\r\n      color: \"rgb(81,81,81)\",\r\n      size: 2000,\r\n      highlightStrokeColor: \"white\",\r\n      labelPosition: \"center\",\r\n      fontSize: 20,\r\n      highlightFontSize: 20,\r\n      fontColor: \"white\",\r\n    },\r\n    link: {\r\n      highlightColor: \"white\",\r\n      type: \"CURVE_SMOOTH\"\r\n    },\r\n  };\r\n\r\n  const onClickNode = function (nodeId) {\r\n    console.log(`Clicked node ${nodeId}`);\r\n  };\r\n\r\n  const onRightClickNode = function (event, nodeId) {\r\n    console.log(`Right clicked node ${nodeId}`);\r\n  };\r\n\r\n  const onMouseOverNode = function (nodeId) {\r\n    console.log(`Mouse over node ${nodeId}`);\r\n  };\r\n\r\n  const onMouseOutNode = function (nodeId) {\r\n    console.log(`Mouse out node ${nodeId}`);\r\n  };\r\n\r\n  const onClickLink = function (source, target) {\r\n    console.log(`Clicked link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onRightClickLink = function (event, source, target) {\r\n    console.log(`Right clicked link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onMouseOverLink = function (source, target) {\r\n    console.log(`Mouse over in link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onMouseOutLink = function (source, target) {\r\n    console.log(`Mouse out link between ${source} and ${target}`);\r\n  };\r\n\r\n  const onNodePositionChange = function (nodeId, x, y) {\r\n    console.log(`Node ${nodeId} is moved to new position. New position is x= ${x} y= ${y}`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Graph\r\n        id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\r\n        data={data}\r\n        config={myConfig}\r\n        onClickNode={onClickNode}\r\n        onRightClickNode={onRightClickNode}\r\n        onClickLink={onClickLink}\r\n        onRightClickLink={onRightClickLink}\r\n        onMouseOverNode={onMouseOverNode}\r\n        onMouseOutNode={onMouseOutNode}\r\n        onMouseOverLink={onMouseOverLink}\r\n        onMouseOutLink={onMouseOutLink}\r\n        onNodePositionChange={onNodePositionChange}\r\n      />\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n        <Button>One</Button>\r\n        <Button>Two</Button>\r\n        <Button>Three</Button>\r\n      </ButtonGroup>\r\n      <Button onClick={toggleDrawer}>Open</Button>\r\n      <Drawer anchor=\"left\" open={open} onClose={toggleDrawer}>\r\n        <NodeEditor {...nodeEditorProps} />\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MarkovChain;","import { useState } from 'react';\r\n\r\nconst epsolon = 1e-6;\r\n\r\nexport function useMarkovChain() {\r\n  const [nodes, setNodes] = useState([]);\r\n  const [currentNode, setCurrentNode] = useState(0);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n  const addNode = () => {\r\n    setNodes([...nodes, new Node(nodes.length)])\r\n  }\r\n\r\n  const removeNode = () => {\r\n    setNodes(nodes.slice(0, -1));\r\n  }\r\n\r\n  const tryUpdateNodeProbabilities = (label, newProbabilities, force = false) => {\r\n    const newNodes = [...nodes];\r\n\r\n    // Normalizing Step\r\n    const sum = newProbabilities.reduce((accumulator, currentValue) => accumulator + currentValue);\r\n\r\n    if (force) {\r\n      newProbabilities = newProbabilities.map(probability => probability / sum);\r\n    }\r\n\r\n    const newNode = { ...newNodes[label] };\r\n    newNode.transitionProbabilities = newProbabilities;\r\n    newNodes[label] = newNode;\r\n\r\n    if (sum + epsolon < 1 || sum - epsolon > 1) {\r\n      return false;\r\n    }\r\n\r\n    setNodes(newNodes);\r\n    return true;\r\n  }\r\n\r\n  return {\r\n    nodes,\r\n    currentNode,\r\n    setCurrentNode,\r\n    addNode,\r\n    removeNode,\r\n    tryUpdateNodeProbabilities,\r\n    selectedNode,\r\n    setSelectedNode\r\n  };\r\n}\r\n\r\nclass Node {\r\n  constructor(label) {\r\n    this.isSelected = false;\r\n    this.label = label;\r\n    this.transitionProbabilities = [];\r\n\r\n    this.transitionProbabilities[label] = 1;\r\n  }\r\n}","import React from 'react';\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  makeStyles,\r\n  // Tooltip,\r\n} from \"@material-ui/core\"\r\n\r\nimport MarkovChain from '../markov-chain';\r\nimport { useMarkovChain } from '../hooks';\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const markovChainState = useMarkovChain();\r\n  /*\r\n  const {\r\n    nodes,\r\n    currentNode,\r\n    selectedNode,\r\n    setCurrentNode,\r\n    setSelectedNode,\r\n    addNode,\r\n    removeNode,\r\n    tryUpdateNodeProbabilities\r\n  } = markovChainState;\r\n  */\r\n\r\n  return (\r\n    <div>\r\n      <h1>Interactive Markov Chains</h1>\r\n      <h2>State Statistics</h2>\r\n      <p>Steps: 234</p>\r\n      <Button>asdf</Button>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Dessert (100g serving)</TableCell>\r\n              <TableCell align=\"right\">Calories</TableCell>\r\n              <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n                <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                <TableCell align=\"right\">{row.protein}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <MarkovChain {...markovChainState} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.),\r\n  createData('Eclair', 262, 16.0, 24, 6.),\r\n  createData('Cupcake', 305, 3.7, 67, 4.),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { hot } from 'react-hot-loader';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link as RouterLink,\r\n} from \"react-router-dom\";\r\nimport { Link } from '@material-ui/core';\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\"\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport './App.css';\r\nimport Home from './home';\r\nimport About from './about';\r\n\r\nconst darkTheme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n      <CssBaseline>\r\n        <Router>\r\n          <div className=\"pageContainer\">\r\n            <div>\r\n              <Link component={RouterLink} to=\"/\">Home</Link>\r\n              <Link component={RouterLink} to=\"/about\">About</Link>\r\n            </div>\r\n            <Switch>\r\n              <Route path=\"/about\">\r\n                <About />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </CssBaseline>\r\n    </ThemeProvider >\r\n  );\r\n\r\n}\r\n\r\nexport default hot(module)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components';\r\nimport 'fontsource-roboto';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}